// start using mongodb
mongosh

// Show all databases
show dbs

// Use a specific database
use myDatabase

// Show all collections in the current database
show collections


// -----------------------------------------------------------------------------------------


// Create a database (if it doesn't exist)
use myDatabase

// Create a collection
db.createCollection("myCollection")

// Drop a database
db.dropDatabase()

// Drop a collection
db.myCollection.drop()


// ---------------------------------------------------------------------------------------------



// Insert a single document
db.myCollection.insertOne({ name: "Alice", age: 30 })

// Insert multiple documents
db.myCollection.insertMany([
    { name: "Bob", age: 25 },
    { name: "Charlie", age: 35 }
])

// ---------------------------------------------------------------------------------------------------

// Find all documents
db.myCollection.find()

// Find documents with specific criteria
db.myCollection.find({ age: { $gt: 30 } })

// Find documents and limit the results
db.myCollection.find().limit(2)

// Sort documents
db.myCollection.find().sort({ age: -1 })


//-------------------------------------------------------------------------------------------


// Update a single document
db.myCollection.updateOne({ name: "Alice" }, { $set: { age: 32 } })

// Update multiple documents
db.myCollection.updateMany({ age: { $lt: 30 } }, { $inc: { age: 1 } })

// Delete a single document
db.myCollection.deleteOne({ name: "Bob" })

// Delete multiple documents
db.myCollection.deleteMany({ age: { $gt: 40 } })

// ------------------------------------------------------------------------------------

// Group documents by age and count the number of documents in each group
db.myCollection.aggregate([
    { $group: { _id: "$age", count: { $sum: 1 } } }
])




// -----------------------------------------------------------------------------

// Switch to a database
use myDatabase

// Switch to a collection within that database
db.myCollection

// Switch to another database
use anotherDatabase

// Switch to a collection within the new database
db.anotherCollection